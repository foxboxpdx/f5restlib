use std::collections::HashMap;

// Virtual
#[derive(Serialize, Deserialize, Debug)]
pub struct VirtualRoot {
    pub items: Vec<F5Virtual>
}

#[derive(Serialize, Deserialize, Debug)]
pub struct F5Virtual {
    pub name: String,
    pub partition: String,
    pub destination: String,
    pub pool: Option<String>,
    #[serde(rename="sourceAddressTranslation")]
    pub snat: HashMap<String, String>,
    #[serde(rename(serialize="profiles", deserialize="profilesReference"))]
    pub profiles: Profiles
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Profiles {
    pub items: Vec<VipProfile>
}
#[derive(Serialize, Deserialize, Debug)]
pub struct VipProfile {
    pub name: String,
    pub partition: String,
    pub context: String
}

// Pool
#[derive(Serialize, Deserialize, Debug)]
pub struct PoolRoot {
    pub items: Vec<F5Pool>
}

#[derive(Serialize, Deserialize, Debug)]
pub struct F5Pool {
    pub name: String,
    pub partition: String,
    #[serde(rename="loadBalancingMode")]
    pub lbmode: String,
    pub monitor: String,
    #[serde(rename(serialize="members", deserialize="membersReference"))]
    pub members: Members
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Members {
    pub items: Vec<PoolMember>
}
#[derive(Serialize, Deserialize, Debug)]
pub struct PoolMember {
    pub name: String
}

// ClientSSLProfile
#[derive(Serialize, Deserialize, Debug)]
pub struct ClientRoot {
    pub items: Vec<F5ClientSSL>
}
#[derive(Serialize, Deserialize, Debug)]
pub struct F5ClientSSL {
    pub name: String,
    pub partition: String,
    pub cert: String,
    pub key: String
}

// Cert
#[derive(Serialize, Deserialize, Debug)]
pub struct CertRoot {
    pub items: Vec<F5Cert>
}
#[derive(Serialize, Deserialize, Debug)]
pub struct F5Cert {
    pub name: String,
    #[serde(rename="apiRawValues")]
    pub raw: HashMap<String, String>,
    #[serde(rename="commonName")]
    pub cn: String
}

// Key
#[derive(Deserialize, Debug)]
pub struct KeyRoot {
    pub items: Vec<F5Key>
}
#[derive(Deserialize, Debug)]
pub struct F5Key {
    pub name: String,
    #[serde(rename="keySize")]
    pub key_size: String,
    #[serde(rename="keyType")]
    pub key_type: String
}
